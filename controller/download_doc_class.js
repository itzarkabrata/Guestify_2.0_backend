import PDFDocument from "pdfkit";
import { Booking_Model } from "../models/booking.js";
import { Habitate_Model } from "../models/habitate.js";
import { Database } from "../lib/connect.js";

export class Download_Doc {
  static async downloadBookingDocument(req, res) {
    try {
      if (!(await Database.isConnected())) {
        throw new Error("Database server is not connected properly");
      }
      const { booking_id } = req.params;

      const booking = await Booking_Model.findById(booking_id).lean();
      const persons = await Habitate_Model.find({
        booking_id: booking_id,
      }).lean();

      if (!booking)
        return res.status(404).json({ message: "Booking not found" });

      // Initialize PDF
      const doc = new PDFDocument({ size: "A4", margin: 50 });

      // Stream PDF to browser
      res.setHeader(
        "Content-Disposition",
        `attachment; filename=booking_${booking_id}.pdf`
      );
      res.setHeader("Content-Type", "application/pdf");
      doc.pipe(res);

      // --- Logo ---
      const logoUrl = "https://yourdomain.com/logo.png"; // Optional: use static image or cloud url
      // doc.image(logoUrl, 50, 20, { width: 80 });

      // --- Title ---
      doc
        .fillColor("#333")
        .fontSize(20)
        .text("Guestify Booking Form", { align: "center", underline: true })
        .moveDown(1.5);

      // --- Booking Info ---
      doc.fontSize(12).fillColor("#000");
      const bookingInfoTop = doc.y;

      doc.text(`Booking ID: ${booking._id}`);
      doc.text(`Room ID: ${booking.room_id}`);
      doc.text(`User ID: ${booking.user_id}`);
      doc.text(`Admin ID: ${booking.admin_id}`);
      doc.text(`Start Date: ${new Date(booking.start_date).toDateString()}`);
      doc.text(
        `Duration: ${booking.duration.year} years ${booking.duration.month} months`
      );
      doc.text(`Remarks: ${booking.remarks || "N/A"}`);
      doc.moveDown(1);

      // --- Table Header ---
      doc.fontSize(14).text("Persons / Habitates", { underline: true });
      doc.moveDown(0.5);

      const tableTop = doc.y;
      const itemX = 50;

      // Column positions
      const columns = {
        name: 50,
        age: 200,
        gender: 250,
        address: 300,
        identity: 500,
      };

      // Draw table header
      doc.fontSize(10).fillColor("#000").text("Name", columns.name, tableTop);
      doc.text("Age", columns.age, tableTop);
      doc.text("Gender", columns.gender, tableTop);
      doc.text("Address", columns.address, tableTop);
      doc.text("Identity", columns.identity, tableTop);

      // Draw a line below header
      doc
        .moveTo(itemX, tableTop + 15)
        .lineTo(550, tableTop + 15)
        .stroke();

      // --- Table Rows ---
      let y = tableTop + 20;
      persons.forEach((p) => {
        doc
          .fontSize(10)
          .text(`${p.first_name} ${p.last_name}`, columns.name, y)
          .text(p.age, columns.age, y)
          .text(p.gender, columns.gender, y)
          .text(p.address, columns.address, y, { width: 190 })
          .text(`${p.type_of_identity}: ${p.identity_id}`, columns.identity, y);

        y += 20;

        // Add new page if y exceeds limit
        if (y > 700) {
          doc.addPage();
          y = 50;
        }
      });

      // --- Footer ---
      doc.moveDown(2);
      doc
        .fontSize(10)
        .fillColor("gray")
        .text("Generated by Guestify Booking System", {
          align: "center",
          opacity: 0.6,
        });

      // Finish PDF
      doc.end();
    } catch (error) {
      console.error("PDF generation failed:", error);
      res
        .status(500)
        .json({ message: "Error generating PDF", error: error.message });
    }
  }
}
